name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@27135e314dd1818f797af1db9dae03a9f045786b # pin@master
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@c51a7207680f1bee06f4a751214aab70667f9e25 # pin@master
        with:
          go-version-file: ./go.mod

      # Lint
      - name: Linting
        uses: golangci/golangci-lint-action@92ba55cf0d79a9feb999e9bcef95c952bbbe545a  # pin@master
        with:
          version: latest
          args: --config=./.github/.golangci.yml ./...
          only-new-issues: true

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: [ '1.20', '1.19' ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@27135e314dd1818f797af1db9dae03a9f045786b # pin@master
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@c51a7207680f1bee06f4a751214aab70667f9e25 # pin@master
        with:
          go-version: ${{ matrix.go }}

      # Test
      - name: Run Tests
        run: cd .github && make test

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7
        with:
          go-version-file: ./go.mod

      # Coverage
      - name: Run coverage
        run: cd .github && make cover

      # Codecov
      - name: Codecov
        uses: codecov/codecov-action@8deb5f497d6af48d764f4983aea375e70bd09747
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          file: .github/coverage.out

      # Sonar
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@6bbd64e0cb2194e04addb429d669a9ee873eeeef
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=bytemare_secret-sharing
            -Dsonar.organization=bytemare-github
            -Dsonar.go.coverage.reportPaths=.github/coverage.out
            -Dsonar.sources=.
            -Dsonar.test.exclusions=examples_test.go,tests/**
            -Dsonar.coverage.exclusions=examples_test.go,tests/**
            -Dsonar.tests=tests/
            -Dsonar.verbose=true
